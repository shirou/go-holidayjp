// Code generated by go-bindata.
// sources:
// asset/holidays.yml
// DO NOT EDIT!

package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetHolidaysYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x9d\xef\x8e\x1c\xd7\x75\xc4\xbf\xe7\x29\xf4\x02\x04\xe6\xfc\xe9\xe9\x73\xf5\x74\xa6\xe2\x58\x86\x25\x07\x72\x1c\x29\x82\x8c\xc0\x1f\x42\xc7\x11\x61\x39\xb1\x15\x21\x80\x6c\x85\x0f\x43\xee\x92\x8f\xe1\x99\x39\x77\x86\xda\xb9\x55\x65\x40\x1f\x8c\x53\xdc\xf5\xe8\x54\x6f\x77\xd5\x6f\x2f\x5b\x36\xf6\xc3\xb3\x83\x9d\xfe\xf9\xf0\x83\x87\x7f\xfa\xc7\xc7\x7f\xfb\xdd\x3f\x5c\x47\xb6\x7d\xf8\xc1\xe3\xcf\x3f\x7b\xf3\xfd\xf7\xaf\x9f\xff\xf1\xbd\xe0\xcf\xec\xfc\x67\xff\xf2\xfd\xc3\x6f\x7e\x78\xf7\x5f\x5f\x3e\xbc\xfa\xee\x89\x1c\xcf\xfc\x24\x3f\x7e\xf9\xbb\x87\x9f\xff\xec\x89\x90\xcf\x7c\x9c\xbe\xee\xc5\xd7\x6f\xbf\xfa\xf8\xdd\xcb\xcf\xdf\xfe\xeb\x6f\xdf\x6b\xdb\xe9\xeb\x4e\x5f\xf4\xb3\x3f\x3f\x7e\xfb\x79\x7f\xcf\x27\xda\xe9\x83\xbc\x7e\xfe\xeb\xd7\xcf\xbf\x7e\xfd\xd1\x47\x4f\xbe\xe7\xe8\x0f\xf9\xf9\x1f\xde\xfd\xe4\xf9\x9d\xe0\xa7\x6f\xf8\xf6\xf7\x9f\xdc\x7d\x0a\x3b\xff\xf3\xe1\x07\x6f\x7e\xf8\xf5\xbb\x8f\xfe\xfc\x44\xb0\xfe\x08\x5f\x7c\xfc\xf0\xe9\x17\x77\xc2\xf9\x5b\x3d\x7c\xf2\xe2\xe1\x17\xff\xfb\xf8\xd3\xdf\xbe\xfb\xc3\xbf\xbf\x97\x6d\x5d\x9d\xb1\xd5\x99\x5e\x9d\xb1\xd5\x99\x58\x9d\x89\xd5\x99\x58\x9d\xb1\xd5\x5d\x04\xcf\x75\x75\xc6\x56\x67\x6c\x75\xa6\x57\xe7\xeb\xea\x9c\xad\xce\xf5\xea\xfc\xb2\xba\xc3\xba\x3a\x17\xab\x73\xb1\x3a\x17\xab\x73\xb6\x3a\x67\x57\x9d\xb3\xd5\x39\x5b\x9d\xeb\xd5\xc5\xba\xba\x60\xab\x0b\xbd\xba\x60\x57\x5d\x88\xd5\x5d\xb4\x38\xef\xfb\xd3\xff\x7e\xfc\xcd\xab\x37\x7f\xfd\xd5\x7b\x81\xee\x34\xc4\x4e\x83\xed\x34\xd8\x4e\xe3\x7a\x9d\xae\x1f\x81\x2c\x3b\xd8\xb2\x43\x2f\x3b\xd7\x65\x27\x5b\x76\xea\x65\x27\x5b\x76\x8a\x65\xa7\xd8\x69\x8a\x9d\xb6\x76\x5c\x37\x94\x6c\xd9\x2d\xb0\xaf\x40\x2e\x24\x5b\x76\xb2\x65\xb7\x00\x7c\x4b\xed\xc2\xb6\xba\xb0\x31\x17\x36\xed\xc2\xc6\x5c\xd8\x84\x0b\x9b\x70\x61\x13\x2e\x6c\x6c\xd9\x1b\xbb\xd1\x6e\x6c\xa7\x1b\xdb\xe9\xf6\xf7\x56\x77\x96\xc1\xca\x8f\xeb\x4e\x8f\x6c\xa7\x47\xbd\xd3\x23\xbb\x03\x1f\xc5\x4e\x8f\x62\xa7\x47\xb1\xd3\x23\xdb\xe9\x91\x5d\xa7\x47\xb6\xd3\x16\x0c\xed\x86\x2c\xfb\xa8\x97\xbd\xaf\x3b\xdd\xd9\x4e\x77\xbd\xd3\x9d\x5d\xa7\xbb\xd8\xe9\x2e\x76\xba\x8b\x9d\xee\x6c\xa7\x3b\xdb\xe9\xce\x76\xba\xb3\xd5\xed\x7a\x75\xb5\xae\xae\x47\xbe\xda\x53\x6c\xa7\x2d\x80\x7b\x58\xe9\x65\x17\x5b\x76\x89\x65\x97\x58\x76\x89\x65\x17\x5b\x76\xb1\x65\x17\x5b\x76\xb1\x65\x97\x5e\xf6\x58\x97\x3d\xd8\x4e\x87\x5e\x5d\xcb\xc0\xa4\xc1\x76\x3a\xc4\x4e\x07\xcb\x16\x43\x2c\x7b\x88\x65\x0f\xb6\xec\xc1\xee\xc0\x83\x2d\x7b\xb0\x65\x0f\xb9\xec\x5a\x0b\x56\xb1\x82\x55\xba\x60\xd5\x81\xdc\x68\x4b\x14\xac\x12\x05\xab\x44\xc1\x2a\x56\xb0\x8a\x15\xac\x62\x05\xab\x58\xc1\x2a\x5d\xb0\xa6\xbc\x3e\xbc\x6a\x6d\x5e\xc5\x9a\x57\xe9\xe6\x55\xac\x79\x95\x68\x5e\x25\x9a\xd7\xd4\xf0\x87\xa6\xcb\x66\x95\xac\x05\xb4\x6c\x56\xc9\x8a\x55\xb2\xd2\x95\xac\xd6\x4a\x56\xac\x92\x95\xae\x64\xe5\x6c\xa7\x2d\xac\x77\x8b\x12\x5d\xad\x44\x57\x2b\xd1\xd5\x8a\x75\xb5\x62\x5d\xad\x58\x57\x9b\xc2\x9a\x14\x8a\x95\xb8\xd2\x25\xae\xd6\x12\x57\xac\xc4\x95\x2e\x71\xc5\x4a\x5c\x89\x12\x57\xa2\xab\x95\xe8\x6a\xc5\xba\x5a\xb1\xae\x56\xac\x92\x15\xab\x64\xa5\x2b\x59\xad\x95\x6c\x8e\xc0\x65\xc5\xba\xda\x14\xd6\xa4\x50\xba\xc4\x55\xb2\x3b\xb0\x28\x71\xad\x81\xa7\x5a\x89\x76\x57\xa2\xdd\x15\x2b\x71\xc5\xba\xda\x14\xc0\x4d\x89\x95\xb8\x62\x25\xae\x74\x57\xab\xb5\xab\x15\xeb\x6a\xa5\xbb\x5a\xb1\xae\x56\xa2\xab\x95\xe8\x6a\x25\xba\xda\xd4\xc0\x15\xc1\x4a\xdc\x14\xd8\x57\x20\x17\x58\xbb\x2b\xd6\xee\xa6\x00\x7c\xd3\xb5\xaf\xd6\x76\x57\xac\xdd\x95\x6e\x77\x75\x64\x2e\x88\x76\x57\xa2\xdd\x95\x68\x77\xc5\xda\x5d\xb1\x76\x57\xac\xdd\x15\x2b\x71\xa5\x4b\xdc\x94\xc1\xca\xd7\x76\x57\xac\xdd\x95\x6e\x77\xc5\xda\x5d\x89\x76\x57\xa2\xdd\x4d\x0d\x7f\x68\xba\x6c\x56\xfb\x8a\xd5\xbe\x62\xb5\xaf\x58\xed\x2b\x5d\xfb\x6a\xad\x7d\xc5\xda\x5d\xe9\x12\x57\xc5\x6e\xcd\xef\xdb\xdd\xdd\x6e\x44\xbb\x2b\xd1\xee\xa6\x76\x5a\xf6\xe9\x53\x3c\xfe\xcf\xaf\x4e\xff\x4f\x4f\xbe\x27\xdd\x37\x6b\x7e\xc5\x9a\x5f\xb1\xe6\x57\xac\xf9\x95\x6e\x7e\xb5\x36\xbf\x39\x02\x0f\x4f\x56\x09\xa7\x00\x6e\x7c\xba\x2b\xb6\x7c\xf9\xc9\xfa\xf2\x9b\x87\x7f\xf9\xb4\xb7\x7e\x92\x1f\x5e\xfc\xfe\xe1\x8b\x97\xa7\xff\xf1\xf6\xc5\x5f\xe7\x9f\xc3\x3f\x1d\xb7\xea\xf8\xfa\xf9\xab\xcb\x72\x7f\xf1\x44\xa3\x86\x0d\x61\x98\x68\x8f\xc5\xda\x63\x0b\xc8\x30\xd6\x1e\x8b\xb5\xc7\xfa\x3b\xed\xf1\x24\x7b\xcb\xcb\x35\x3a\xd6\x66\x39\x58\xb3\x1c\xba\x59\x4e\x79\xbd\x08\x06\xfb\x9d\xde\x38\x70\x2f\x5a\x03\x81\x67\x88\x2e\x3a\x35\x68\xd2\x10\x3d\x75\xb0\x9e\x3a\x58\x4f\x9d\xc2\x7a\xb3\x1c\xac\xc0\x0e\x56\x60\x5b\x38\xef\xed\xe1\x97\xdf\xbe\xf9\xe1\x97\xa7\x0b\xf8\xf1\x9b\xff\x78\xfc\xe3\xab\xf3\x55\xfd\xd3\x9f\xdc\xfe\x04\xf5\xf7\x2c\x0b\x7f\xcd\xe1\xe7\x5c\xeb\xef\x60\xf5\x77\xe8\xfa\x3b\x58\xfd\x1d\x26\xfc\x15\xf5\x77\x98\xb0\x51\x34\xe0\xa9\xad\x37\x95\xc1\xaa\xf1\x14\xd8\x57\x20\xe3\x59\x67\x1e\xac\x33\x4f\x01\x5a\x20\x6d\x35\x61\xeb\x5a\xb4\x07\x2b\xda\x43\x17\xed\xc1\x7e\xf7\x39\x5c\xb8\x27\xfa\xf4\xd4\xc0\xbf\xaf\x28\xda\x83\x15\xed\xc1\x8a\xf6\x60\x45\x7b\xb0\x3e\x3d\x74\x9f\x3e\xcb\x74\xdf\x6b\xd7\x1e\xac\x6b\x0f\xdd\xb5\x47\xb0\x7d\x87\xd8\xb7\xe8\xda\x53\xc3\x3f\x2d\xa2\x87\x9f\xb5\x73\x22\x3e\x6d\xf6\xab\x8f\x1f\x5e\xbc\x7c\xf8\xe6\xb3\x87\xff\xff\xf6\xcd\x5f\x9e\xbf\xfb\xcf\x97\x6f\xff\xf9\x93\xf3\xa3\xf4\xbb\xcf\x1e\xbe\xfe\xea\xfd\x6d\x88\x15\xf7\xc1\x8a\xfb\x60\xc5\x7d\x0a\x6b\x9e\x1a\xac\xd1\x0f\xdd\xe8\xcf\x32\x35\x6f\x6d\xfb\x83\x95\xfa\xa1\xbb\xfb\x60\xbf\x80\x1d\x29\xcc\x13\x15\x7d\x6a\xd8\x3c\x51\xdf\x07\xab\xef\x83\xd5\xf7\xc1\x5a\xfa\x60\x2d\x7d\xe8\x96\x7e\x96\xe9\xca\xd7\x06\x3f\x47\x20\x1e\xb0\x6a\x3f\x05\x70\x73\xd6\x9d\x7f\xb0\xce\x3f\x36\x61\x92\xe8\xfc\x53\xc3\x26\x09\x1e\x30\x58\xed\x1f\xac\xdd\x0f\xd6\xee\x07\x6b\xf7\x43\x97\xf8\xb3\x4c\x4d\x5a\x0b\xfe\x60\x05\x7f\xe8\x82\x3f\x65\x60\x2e\xfb\xbd\xee\x38\x0a\x2f\x44\xf3\x9f\x1a\xf6\x42\x50\x81\xa9\x81\x8b\xe9\x24\xec\xfd\x09\xbf\xfb\xbf\x27\x7f\x1c\x5b\x77\x64\x89\x81\xd1\x85\xc1\xe8\xc2\x60\x74\x61\x0a\xe0\x09\xaa\xb1\xc3\x59\xa6\x66\xaf\xe4\x61\x30\xf2\x30\x34\x79\x18\x3b\xf3\x74\x17\x9e\x0a\xf2\x30\x04\x60\x38\x6b\xc0\x9e\x9e\x82\xe7\x07\xe3\x11\x83\xf1\x88\xc1\x78\xc4\x60\x3c\x62\x68\x1e\x31\x65\xe0\xde\x2e\xec\x59\x21\xc6\x60\x10\x63\x68\x88\x31\xd8\x6f\xa2\x47\x09\x7b\x04\xab\x18\xc5\x02\x9d\x00\x15\x67\x0d\xf8\xc6\xf0\xc5\x60\xf8\x62\x30\x7c\x31\x18\xbe\x18\x1a\x5f\x9c\x65\xea\xc2\x8a\x36\x06\x23\x18\x43\x83\x8a\xc1\x00\xc4\x14\xc0\xad\x52\x90\x89\x21\xc8\xc4\x10\x64\x62\x08\x32\x71\xd6\x80\x43\x8c\x57\x0c\xc6\x2b\x06\xe3\x15\x53\x00\x3f\xa4\x0c\x64\x0c\x0d\x32\x06\x05\x19\x7e\x38\xdc\x83\x8c\xeb\xe8\xfc\xc1\x9e\x58\xd7\x02\xb5\xae\x65\x70\x7f\x6b\x01\x3b\xd4\x1a\x76\xe8\xa6\x01\x87\x6e\x1a\x70\xa8\xb5\x7b\x87\x7a\x0a\x1c\xba\x0a\x8b\x43\x17\xc1\x0e\x97\xa4\xff\xc4\xa1\x16\x80\x11\x57\x81\x18\xd1\x32\x35\xe2\x1e\x2c\xdc\x46\xb5\x1a\xa1\xc0\xc2\x4d\xbe\xff\x51\x69\x01\x3b\x44\x89\xc3\x55\x5b\x88\x52\x0b\xd4\x3a\x8a\x22\x6e\x1a\xb6\xce\xa0\x75\x98\x43\x5c\x05\x64\x9d\x41\xce\x74\x11\xce\x9e\xd6\xea\x29\xe6\x10\x57\x81\x7b\x4a\x71\xc3\x4d\x03\x9f\xe2\x9e\x43\x5c\x47\x96\xab\xd9\x8a\x43\xb4\x0c\x6e\x98\x2d\x50\x4f\x29\x87\xb8\x69\xd8\x3a\x8a\x22\x6e\xda\x7d\xc2\x6b\x01\x78\x8a\xc9\xc5\x4d\xc0\xdf\x07\x9b\xdd\x48\x23\x57\x4f\x31\xd2\xb8\x09\xd0\x18\x69\x36\x65\x1d\x27\xed\x9e\x75\x5c\x47\x16\xab\xa7\x8a\x75\xb4\x8c\x3d\xa5\xac\xa3\x35\xea\x29\xe5\x19\xad\xcd\x4c\xf8\x63\x7b\x30\xb4\xb8\x0a\xc8\x85\x66\x13\xb1\xba\x80\xd9\xc4\x55\xe0\xcb\x0e\x18\x08\x5b\xa0\x2e\xdc\x43\x8b\xeb\xe8\x72\x3b\xbc\x73\x41\x41\x8b\x96\xf1\xdd\x92\x42\x8b\xd6\xa8\x0b\x14\x5a\xdc\x34\xec\x50\x9e\x1d\xb2\x71\xe7\x50\x13\x8b\xc3\xea\x10\x46\x19\x17\x61\x06\x8b\x7b\x87\x30\xca\xb8\x0a\xdc\x21\x8a\x32\x4e\xda\x3d\xca\xb8\x8e\x50\xb0\x50\x60\xa2\x65\x6c\xc4\x06\x7f\xbd\xd8\x02\x75\x88\x12\x8b\x9b\x86\x1d\xa2\xc4\xa2\xb5\x93\x43\x75\xe7\x50\x73\x8c\xb1\x3a\x84\x39\xc6\x45\x40\x99\xb0\x05\xec\x90\xe2\x18\x2d\x53\x87\xee\x39\xc6\x6d\x04\x92\x43\x0b\x63\xb5\x4e\x01\x8e\x96\xf1\x9d\x8c\x72\x8c\xd6\xa8\x43\x94\x63\xdc\x34\xec\xd0\x05\x57\xd8\x7e\xe7\x50\x53\x89\x5a\x1d\xc2\x54\xe2\x22\x90\x4c\x88\xa9\xc4\x55\xe0\x0e\x51\xf8\x70\xd2\xee\xe1\xc3\x6d\x04\x32\xa1\x82\x0f\x37\x19\x38\x8b\xcf\x43\xb4\xd0\x0e\xf5\xaf\x8c\xef\x04\x14\x08\x29\xab\xb8\x69\x09\xfd\xa6\x1c\xa3\xb5\xbd\xd3\xc0\x8f\x7d\x6b\x5c\xb1\xaf\xbe\x61\x5c\x71\x13\xc0\xc3\x64\x67\x81\x10\x73\x8c\xab\xc0\x0d\xa5\xb8\xe2\xa6\x81\x4f\x71\xcf\x31\xae\x23\x14\x08\x15\xc7\x68\x19\xdf\x2d\x8b\x19\x4a\x21\xc6\x4d\xc3\xbe\x51\x8e\x71\xd3\x40\x8a\x2b\x18\x37\x30\xe0\xb8\x0a\xc8\xd0\x62\x71\x03\x03\x8e\xab\xc0\x7d\x2b\x16\x37\x28\xf9\x38\x69\xf7\xe4\xe3\x3a\x42\x71\x43\x91\x8f\x96\xb1\x6f\x83\xf9\x46\xe9\xc6\x4d\xc3\xbe\x51\xba\x71\xd3\x80\x6f\x00\x7b\xf4\x74\xb4\x9b\x77\xbe\xb5\xe0\xf0\x3e\x8d\x91\xc8\x45\x38\x7b\xea\xab\xa7\x98\x7c\x5c\x05\xee\xa9\x20\x1f\xb6\x92\x8f\x1e\x5d\xc8\xcb\x53\xeb\x4c\x93\x0f\xc3\x27\x35\x6e\xc2\x7a\xd7\xb5\x03\xf1\xd4\x04\x0f\xb1\x03\xf7\xd4\x04\x0f\xb1\x03\xca\x8f\x76\x20\xf9\xd1\x18\x0f\xb1\x03\xc9\x8f\xc6\x78\x88\x69\x1e\x62\x82\x87\xd8\xca\x43\x7a\x04\xf2\xa3\x69\x1e\x62\xf8\xa0\x45\x0b\xd8\x05\x81\x36\xcc\x84\x0b\x02\x6d\x98\xa1\x8c\x68\x46\x32\xa2\x31\xb4\x61\xf8\x24\x45\x0b\xd8\x05\x4d\x30\x4c\x10\x0c\x5b\x41\xc5\x1c\x81\x6b\xda\x49\x46\x34\x4d\x30\x0c\x9f\xa4\x68\x01\xdb\xe3\x24\x81\x98\xe0\x1a\xe6\xc2\x37\xc1\x35\xcc\x51\x02\x31\x27\x09\xa4\x85\xf3\x8f\xfc\xbd\x6f\x4e\x82\x86\x31\x4a\x61\x1a\x46\x98\x80\x11\x53\x5b\x1f\x66\xb6\x52\x8a\x1e\x81\xa0\x61\x9a\x52\x18\x3e\x91\xd1\x02\xf6\x4d\x20\x0a\x0b\x61\x8f\xc0\x17\x53\x5b\x1f\x58\x76\xe1\x1a\x97\x48\xf1\x63\xdf\xe2\x46\x97\xee\x7c\x63\x5c\xc3\x82\xd0\x25\x63\x5c\x63\x0a\x70\xf9\xd2\x50\xc1\x35\x6c\xe5\x1a\x3d\x02\x74\xc9\x34\xd7\x30\x7c\x18\xa3\x05\xec\x9b\x80\x1a\x96\xc2\x37\x01\x35\x0c\xff\x35\xf9\x16\xd6\x80\x68\xf8\xe0\xc6\x55\x40\xbe\x25\x09\x88\xc6\x68\x87\x69\xda\x31\x65\x60\xab\xc0\x20\xb6\x62\x90\x1e\x81\x80\x68\x1a\x83\x18\x3e\x9f\xd1\x02\xf6\x4d\xa0\x0e\xdb\x84\x6f\x02\x75\x4c\x0d\xf8\xb6\xa1\x80\x68\x1b\x09\x88\x53\x80\x01\xd1\x18\x1f\xb1\x8d\x04\x44\x63\x7c\xc4\x34\x1f\x31\xc1\x47\x6c\xe5\x23\x3d\x42\x01\x51\x63\x10\xc3\xc7\x39\x6e\xc2\x4a\xb0\xec\xc8\x3c\x15\x70\xc4\x8e\xc2\x53\x01\x47\xec\x08\xa3\xc9\x69\x5a\xfd\xef\xf4\xa7\x3f\x3d\x99\xe2\xc0\x72\x64\x0f\x3e\x7c\x90\xa3\x05\x6c\x9a\x46\x26\x26\x90\x89\xad\xc8\x64\x8e\x40\x60\xd9\x59\x60\xd1\x2c\xc5\xf0\x41\x8e\x16\xb0\x69\x82\x8c\x98\x20\x23\x26\xc8\x88\xed\x88\x68\x9d\xa7\xc0\xb4\x9d\x70\x2e\x63\xbc\xc4\x76\xc2\xb9\x8c\x61\x11\xd3\x58\xc4\x04\x16\xb1\x95\x7e\xcc\xd1\xca\xb9\x4c\xd3\x8f\x29\x03\xb3\xf1\xf1\x8e\x16\xb0\x69\xc5\x52\xa6\xe0\x25\x26\x78\x89\x09\x5e\x62\x05\x53\x66\x41\x37\x8b\x65\x4f\x06\x4b\xa6\x00\x1e\x5d\xc5\x42\x29\xa3\x28\xa6\x29\x8a\x09\x58\x32\x35\xf0\x29\x56\x8a\xd2\x23\x14\x4a\x35\x45\x31\x7c\x7e\xa4\x05\x6c\xb3\xa0\x28\x26\x28\x8a\x09\x8a\x62\x8c\xa2\xd8\x80\xa1\x74\x40\x9b\x7b\x0a\x2e\xe5\xc1\x32\x2c\x03\x2b\x36\x58\x86\x65\x60\x65\x0a\xd0\x2b\xe9\xbf\x20\x2e\xbe\x12\x97\x1e\x81\x0c\xeb\x9a\xb8\x38\x3b\x6b\xe2\x0c\xac\xb8\x00\x2b\x2e\xc0\x8a\x0b\xb0\x32\xb5\xd5\x66\x87\x27\x50\xce\xd3\xd5\x66\x3f\x90\x84\x34\x85\xf5\x81\xea\x07\x92\x82\x9c\x71\x18\xd7\x1c\xc6\x05\x87\xf1\x95\xc3\xf4\x08\xa4\x20\xd7\x1c\xc6\xd9\xf1\x13\x67\x1c\xc6\x05\x87\x71\xc1\x61\x5c\x70\x18\x37\x44\xc3\xce\x53\xe0\x8d\x11\x46\xe6\x8c\xce\xb8\x11\x46\xe6\x8c\xce\xb8\xa6\x33\x2e\xe8\x8c\xaf\x74\xa6\x47\x80\x91\xb9\x86\x30\xce\x8e\x91\x38\x83\x30\x2e\x58\x8b\x0b\xd6\xe2\x82\xb5\xb8\xa3\x20\x7a\x9e\x02\x6f\x9c\x04\x51\x67\xe7\x44\x1c\xff\xd5\x97\x16\xb0\x37\x9a\xc0\xb8\x20\x30\xbe\x82\x96\x39\x5a\x6f\xe8\x53\x58\x83\xa8\x6b\x02\xe3\xec\x9c\x88\x33\x02\xe3\x82\xc0\xb8\x20\x30\x2e\x08\x8c\x07\x0a\xa2\xe7\x29\x30\x2d\x48\x10\x75\x86\x5f\x3c\x48\x10\x75\x86\x5f\x5c\x53\x16\x17\x94\xc5\x57\xca\x32\x47\x6b\x10\x75\x4d\x59\xa6\x0c\xcc\x66\xc7\x4a\x9c\xe1\x17\x17\xf8\xc5\x05\x7e\x71\x81\x5f\x9c\xe1\x17\x4f\x94\x50\xce\x53\xe0\x66\x92\x84\xe2\x49\x12\x4a\x0b\xe8\x99\x76\xc3\x38\xeb\xb7\xc2\xd1\xc5\x19\xc6\x71\xfc\xaa\xc3\xab\xc0\x2f\x0c\x81\x71\x7c\xc5\x38\x3d\x42\xd1\x45\x63\x1c\x67\xa7\x59\x9c\x61\x1c\x17\x18\xc7\x05\xc6\x71\x81\x71\x9c\x61\x1c\xdf\x10\x7e\x3b\x4f\x81\xff\x1b\x81\x72\xce\x00\x8e\x6f\x04\xca\x39\x03\x38\xae\x01\x8e\xe3\x97\x2c\xb6\x40\xdd\x5c\xc9\x4e\x8f\x00\x94\x73\x4d\x76\x9c\x91\x1d\x67\x00\xc7\x05\xc0\x71\x01\x70\x5c\x00\x1c\xc7\x7f\x4b\xa7\x05\x10\x44\x21\xd9\xf1\x23\x0b\xa2\x47\x8e\xea\x9c\x1d\x94\xf1\x23\x0b\xa9\x8c\xfa\xb8\xa6\x3e\x2e\xa8\x8f\xaf\xd4\xa7\x47\x28\xa4\x6a\xb8\xe3\xec\x3c\xcc\x14\xc0\xcd\x8e\x51\x1f\x17\xd4\xc7\x05\xf5\x71\x41\x7d\x7c\x87\xe9\x15\x52\x1f\xdf\x59\x7a\x65\xd4\xc7\x77\x96\x5e\x19\xf5\x71\x4d\x7d\x5c\x50\x1f\x5f\xa9\x4f\x8f\x50\x7a\xd5\xd4\xc7\xd9\x99\x17\x67\x70\xc7\x05\xc3\x71\xc1\x70\x5c\x30\x1c\x2f\x18\x84\x20\xc3\xf1\x62\x41\xa8\xd8\x13\xb2\x58\x10\x62\xa8\xc6\x35\xaa\x71\x81\x6a\x7c\x25\x32\x73\x04\x82\x90\x26\x32\x8e\x5f\x53\xd9\x02\x36\x8d\xa1\x1a\xc7\xef\xa8\x6c\x81\xba\x29\x18\x8e\x0b\x86\xe3\x03\x11\x39\x87\xa8\xc6\x07\x21\x72\xce\x88\x8c\x0f\x42\xe4\x7c\x10\x22\xe7\x0c\xd5\xb8\x26\x32\xae\x88\xcc\x20\x44\x2e\x56\x54\xd3\x23\x40\xe4\x42\xa3\x9a\x60\xa8\x26\x18\xaa\x09\x81\x6a\x42\xa0\x9a\x10\xa8\x26\x18\xaa\x89\x03\xca\xbb\x01\x51\xcd\x9c\xae\x97\x72\x1c\x48\xde\x0d\x76\x96\x26\x0e\x24\xd6\x06\x63\x38\x53\x80\x5e\x29\xff\x43\xc0\x9d\x58\xe1\x4e\x8f\x40\xac\x0d\x0d\x77\x82\x1d\xb2\x09\x06\x77\x42\xc0\x9d\x10\x70\x27\x04\xdc\x99\x1a\xb0\xd9\x50\xac\x0d\x48\x7d\x82\xfd\x75\xa3\x60\xd4\x27\x8c\xc4\xda\x60\xd4\x27\x34\xf5\x99\x32\x30\x5b\xe0\xa0\x58\x71\x50\x8f\x40\xac\x0d\x8d\x83\x82\x9d\xc9\x09\x86\x83\x42\xe0\xa0\x10\x38\x28\x04\x0e\x0a\x47\x61\x27\x20\x0e\x0a\x27\x61\x67\x0a\x86\xd2\x6b\xb0\xc3\x3a\xe1\x24\x08\x05\x43\x45\xa1\x51\x51\x08\x54\x14\x2b\x2a\xea\x11\x08\x42\xa1\x89\x50\xb0\x33\x39\x11\xe4\x17\xcd\xc1\x50\x51\x08\x54\x14\x02\x15\x85\x40\x45\x11\x88\xef\x05\x44\x45\x11\x84\xef\x05\x43\x45\x81\x5f\x9b\xd2\x02\x36\x4d\xa3\xa2\x10\xa8\x28\x56\x54\x14\xf8\x5d\xa8\x37\x61\xe5\x7b\xa1\x19\x52\x30\x54\x14\x0c\x15\x85\x40\x45\x21\x50\x51\x08\x54\x14\x89\x62\x6d\x40\x22\x14\x49\x62\x6d\xb0\x63\x3a\x91\x24\xd6\x06\xe3\x3b\xa1\x31\x4e\x08\x8c\x13\x2b\xc6\x99\xa3\x35\xd6\x86\xc6\x38\x53\x06\x66\xb3\x63\x3a\xc1\xf8\x4e\x0b\x20\xd6\x86\x00\x3f\x21\xc0\x4f\x08\xf0\x13\x1b\x8a\xb5\x01\xf9\x4e\x6c\x24\xd6\x06\xe3\x3b\x53\x00\xcf\xad\x8d\xc4\xda\x60\xe0\x27\x34\xf8\x09\xc1\x77\xa6\x06\x3e\xc5\x0a\x7e\x7a\x84\x62\xad\x06\x3f\xc1\xc0\x4f\x30\xf0\x13\x02\xfc\x84\x00\x3f\x21\xc0\x4f\x30\xf0\x13\x47\x98\x77\x20\xf8\x09\xfc\xd2\x96\xab\x80\x1e\x8f\x47\x96\x77\x18\xdc\x09\x0d\x77\x02\xbf\xf9\xb5\x05\x6a\xf3\x4a\x7d\x7a\x84\xf2\x8e\xa6\x3e\xc1\x8e\xf4\x04\x83\x3b\x21\xe0\x4e\x08\xb8\x13\x02\xee\x4c\x0d\xb8\x09\xde\xe6\xd2\x53\xe0\xe6\x4e\x30\xde\x14\x20\xc6\x0b\x46\x84\x62\x27\x18\x2f\x18\x11\x0a\x4d\x84\x42\x10\xa1\x58\x89\x50\x8f\x00\xc6\x0b\x4d\x84\x82\x11\xa1\x60\x44\x28\x04\x11\x0a\x41\x84\x42\x10\xa1\x28\x18\x60\x21\x11\x8a\x62\x01\x96\x9d\xea\x89\x62\x21\x95\x11\xa1\xd0\x44\x28\x04\x11\x8a\x95\x08\xf5\x08\x85\x54\x4d\x84\x82\x9d\xd1\x09\x06\x7e\x42\xf0\x9d\x10\x7c\x27\x04\xdf\x89\x01\xb3\x28\xe4\x3b\x31\x58\x16\x65\x7c\x27\xf0\xdb\x5d\x5a\xc0\xde\x68\x8c\x13\x02\xe3\xe4\x4a\x6b\xe6\x68\x8d\x27\x53\x58\xb3\x68\x6a\x8c\x93\x0c\xe3\x24\xc3\x38\x89\x5f\x45\xdb\x02\x73\x33\x05\xdf\x49\xc1\x77\xf2\x80\x62\x4d\x42\x8c\x93\x07\x12\x6b\x92\x9d\xb8\xc9\x03\x49\x2f\xc9\x68\x4d\x6a\x28\x93\x02\xca\x24\x7e\xf7\xec\x49\x58\x69\x4d\x8f\x40\x7a\x49\x4d\x6b\x92\x1d\xc5\x49\x46\x6b\x52\xd0\x9a\x14\xb4\x26\x05\xad\x49\x46\x6b\xd2\x10\x94\x4b\x48\x6b\xe6\x14\x5c\xe9\x46\xa0\x5c\x32\x8c\x93\x46\xa0\x5c\x32\x8c\x93\xf8\x25\xb5\x57\x81\xfb\x2f\x30\x4e\xae\x18\xa7\x47\x00\xca\xa5\xc6\x38\xc9\x30\x4e\x32\x8c\x93\x02\xe3\xa4\xc0\x38\x29\x30\x4e\xb2\x37\xc3\xa4\xa3\x90\x9a\x90\xef\x24\x7b\x5f\x4c\xb2\xe3\x3e\xe9\x24\xa4\x26\x63\x38\xa9\x19\xce\x94\x81\xd9\x02\xee\xe4\x0a\x77\x7a\x04\x42\x6a\x6a\xb8\x93\xec\xb8\x4f\x32\x86\x93\x82\xe1\xa4\x60\x38\x29\x18\x4e\xb2\xbf\x70\x95\x81\x42\x6a\x42\xb8\x93\x41\x42\xea\x14\x60\x48\x4d\x06\x7e\x32\x48\x48\x4d\x06\x7e\x52\x83\x9f\x14\xe0\x27\x57\xf0\xd3\x23\x10\x52\x53\xf3\x9d\x64\x7c\x27\x93\xd0\xba\x64\xe0\x27\x05\xf8\x49\x01\x7e\x52\x80\x9f\x4c\x94\x90\x12\x82\x9f\x4c\x92\x90\x92\x9d\xf8\x49\xfc\x62\xdd\x16\xb0\x69\x1a\xfc\xa4\x00\x3f\xb9\x82\x9f\x39\x02\xcf\x8d\x8d\x25\x24\x4d\x84\x92\x1d\xec\x49\x06\x7e\x52\xf0\x9d\x14\x7c\x27\x05\xdf\xc9\x0d\xd1\xba\x84\x7c\x27\x37\x42\xeb\x5a\x40\xa6\x6d\x84\xd6\x25\xc3\x38\xa9\x31\x4e\x0a\x8c\x93\x2b\xad\x99\xa3\x95\xd6\xa5\xa6\x35\x89\x5f\xb4\xdb\x02\x36\x8d\x61\x9c\x16\x50\xac\x15\x7c\x27\x05\xdf\x49\xc1\x77\xf2\x08\x63\x2d\xc4\x38\x79\x64\xb1\x96\x9d\xd1\x99\x02\x78\xa0\x1d\x59\xde\x65\x7c\x27\x35\xdf\x49\x81\x71\xa6\x06\x3e\xc5\xca\x77\x7a\x84\xf2\xae\xe6\x3b\xc9\x4e\xf5\x24\xe3\x3b\x29\xf8\x4e\x0a\xbe\x93\x82\xef\x24\xe3\x3b\xb9\xc3\xbc\x0b\xf9\xce\x9c\x82\x4b\x79\x67\x79\x97\xc1\x9d\xdc\x59\xde\x65\x70\x67\x0a\xd0\x2b\xe9\xbf\xa0\x3e\xb9\x52\x9f\x1e\xa1\xbc\xab\xa9\x4f\x32\xea\x93\x8c\xfa\xa4\xa0\x3e\x29\xa8\x4f\x0a\xea\x93\xec\xdd\x37\x09\x5e\xee\xdb\x53\x60\x73\xb1\x84\xc4\x0e\x08\x65\xb1\x14\xc4\x70\x50\x6a\x1c\x94\x02\x07\xe5\x8a\x83\x7a\x84\x52\x90\xc6\x41\xc9\xce\x01\x25\xc3\x41\x29\x70\x50\x0a\x1c\x94\x02\x07\xe5\x40\xa8\x2e\x21\x0e\xca\x41\x50\x5d\x0e\xfe\xbb\xe6\x1c\xcc\xb7\x41\x30\x5e\x32\x54\x94\x1a\x15\xa5\x40\x45\xdb\x8a\x8a\x36\xf6\xbe\xdf\x4d\x13\xa1\x8d\x11\xa1\xed\x40\xd2\xeb\xc6\x50\xd1\x26\x88\xd0\x26\x88\xd0\x26\x88\xd0\x76\x40\xe9\x75\x83\x44\x68\x3b\x90\xf4\xba\xb1\xf3\x3b\x1b\xfe\xef\x15\xb5\x00\x4d\xdb\x34\x11\xda\x28\x11\xfa\x5b\x00\x00\x00\xff\xff\xd2\x76\x30\xfa\x29\x86\x00\x00")

func assetHolidaysYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetHolidaysYml,
		"asset/holidays.yml",
	)
}

func assetHolidaysYml() (*asset, error) {
	bytes, err := assetHolidaysYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "asset/holidays.yml", size: 34345, mode: os.FileMode(420), modTime: time.Unix(1455815007, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"asset/holidays.yml": assetHolidaysYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"asset": &bintree{nil, map[string]*bintree{
		"holidays.yml": &bintree{assetHolidaysYml, map[string]*bintree{
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

